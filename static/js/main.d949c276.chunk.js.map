{"version":3,"sources":["components/context/strainsContext/strainContext.js","components/context/strainsContext/StrainReducer.js","components/context/types.js","components/context/strainsContext/StrainState.js","components/NavBar.js","components/strains/StrainSelectionForm.js","components/strains/Strains.js","components/Login.js","components/PrivateRoute.js","components/SignUp.js","App.js","serviceWorker.js","index.js"],"names":["StrainContext","createContext","state","action","type","strains","payload","strain","filter","id","current","flavor1","effect1","StrainState","props","useReducer","StrainReducer","dispatch","Provider","value","addStrain","uuid","setCurrent","grabflavor","grabeffect","deleteStrain","children","NavBar","title","icon","className","to","defaultProps","flavors","name","effects","StrainSelectionForm","strainContext","useContext","useState","setStrain","flavor","effect","flavorsEffects","setFlavorsEffects","onChangeFlavorsEffects","e","target","flavorList","length","map","item","i","key","effectList","onSubmit","preventDefault","axios","get","then","res","data","console","log","onChange","array","straintype","rating","description","Strains","Login","password","email","credentials","setCredentials","post","window","localStorage","setItem","history","push","catch","err","placeholder","PrivateRoute","Component","component","rest","render","getItem","SignUp","username","role","App","path","Boolean","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.d949c276.chunk.js","sourcesContent":["import { createContext } from 'react';\r\n\r\nconst StrainContext = createContext();\r\n\r\nexport default StrainContext;","import {\r\n    ADD_STRAIN,\r\n    DELETE_STRAIN,\r\n    SET_CURRENT,\r\n    CLEAR_CURRENT,\r\n    GRAB_FLAVOR,\r\n    GRAB_EFFECT,\r\n    GET_STRAIN\r\n} from '../types';\r\n\r\nexport default (state, action) => {\r\n    switch(action.type){\r\n        case ADD_STRAIN:\r\n            return{\r\n                ...state,\r\n                strains: [...state.strains, action.payload]\r\n            }\r\n\r\n        case GET_STRAIN: \r\n            return {\r\n                ...state,\r\n                strain: [...state.strain, action.payload ]\r\n            }\r\n        case DELETE_STRAIN:\r\n            return {\r\n                ...state,\r\n                strains: state.strains.filter(strain => strain.id)\r\n            }\r\n        case SET_CURRENT: \r\n            return {\r\n                ...state,\r\n                current: action.payload\r\n            }\r\n        case GRAB_FLAVOR:\r\n            return {\r\n                ...state,\r\n                flavor1: [...state.flavor1, action.payload]\r\n            }\r\n\r\n        case GRAB_EFFECT:\r\n                return {\r\n                    ...state,\r\n                    effect1: [...state.effect1, action.payload]\r\n                }    \r\n    }\r\n}","export const ADD_STRAIN = 'ADD_STRAIN';\r\nexport const GET_STRAIN = 'GET_STRAIN';\r\nexport const DELETE_STRAIN = 'DELETE_STRAIN';\r\nexport const SET_CURRENT = 'SET_CURRENT';\r\nexport const CLEAR_CURRENT = 'CLEAR_CURRENT';\r\nexport const GRAB_FLAVOR = 'GRAB_FLAVOR';\r\nexport const GRAB_EFFECT = 'GRAB_EFFECT';\r\n// export const GET_USER = 'GET_USER'\r\n// export const ClEAR_USER = 'CLEAR_USER'\r\n// export const ADD_USER = 'ADD_USER'\r\n// export const EDIT_USER = 'EDIT_USER'\r\n// export const DELETE_USER = 'DELETE_USER'\r\n// export const REGISTER_SUCCESS = 'REGISTER_SUCCESS';\r\n// export const REGISTER_FAIL = 'REGISTER_FAIL';\r\n// export const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\r\n// export const LOGIN_FAIL = 'LOGIN_FAIL';\r\n\r\n","import React, { useReducer } from 'react'\r\nimport { v4 as uuid } from 'uuid';\r\nimport StrainContext from './strainContext';\r\nimport StrainReducer from './StrainReducer';\r\nimport axios from 'axios';\r\n\r\nimport {\r\n    ADD_STRAIN,\r\n    DELETE_STRAIN,\r\n    GET_STRAIN,\r\n    SET_CURRENT,\r\n    CLEAR_CURRENT,\r\n    GRAB_FLAVOR,\r\n    ADD_USER,\r\n    GRAB_EFFECT\r\n} from '../types';\r\n\r\nconst StrainState = props => {\r\n    const initialState = {\r\n        strains: [],\r\n        flavor1: '',\r\n        effect1: '',\r\n        current: null\r\n    }\r\n\r\n    const [state, dispatch] = useReducer(StrainReducer, initialState);\r\n\r\n    //Add Strain \r\n   \r\n    const addStrain =  (strains) =>{\r\n        strains.id = uuid()\r\n        dispatch({ type: ADD_STRAIN, payload: strains})\r\n    }\r\n\r\n    //Get Strain\r\n\r\n\r\n    \r\n    //Delete Strain Selection\r\n\r\n    const deleteStrain = id => {\r\n        dispatch({ type: DELETE_STRAIN, payload: id})\r\n    }\r\n\r\n    //Set Current Strain,\r\n\r\n    const setCurrent = strains => {\r\n        dispatch({ type: SET_CURRENT, payload : strains})\r\n    } \r\n\r\n    //Grab Flavor \r\n\r\n    const grabflavor = flavor1 =>{\r\n        dispatch({ type: GRAB_FLAVOR, payload: flavor1})\r\n    }\r\n\r\n    //Grab Effect\r\n\r\n    const grabeffect = effect1 =>{\r\n        dispatch({ type: GRAB_EFFECT, payload: effect1})\r\n    }\r\n\r\n  \r\n\r\n    // Clear Current Selection\r\n\r\n    return (\r\n        <StrainContext.Provider value={{\r\n            strains: state.strains,\r\n            flavor1: state.flavor1,\r\n            effect1: state.effect1,\r\n            current: state.current,\r\n            addStrain,\r\n            setCurrent,\r\n            grabflavor,\r\n            grabeffect,\r\n            deleteStrain\r\n            \r\n        }}>\r\n            { props.children }\r\n        </StrainContext.Provider>\r\n    )\r\n\r\n}\r\n\r\nexport default StrainState;","import React from 'react'\r\nimport { Link, NavLink } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const NavBar = ({title, icon}) => {\r\n    return (\r\n        <div className=\"navbar bg-primary\">\r\n           <h1>{title}</h1> <i className=\"fas fa-cannabis\"></i>\r\n            <img />\r\n            <ul>\r\n                <li>\r\n                    <NavLink to=\"https://pt-med-cabinet-7.github.io/Marketing/about.html\">Home</NavLink>\r\n                </li>\r\n\r\n                <li>\r\n                    <Link to=\"/login\">Login</Link>\r\n                </li>\r\n                <li>\r\n                    <Link to=\"/Front-End\">Sign-Up</Link>\r\n                </li>\r\n\r\n                <li>\r\n                    <Link to=\"/strains\">Strains</Link>\r\n                </li>\r\n\r\n                \r\n\r\n            </ul>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nNavBar.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    icon: PropTypes.string\r\n}\r\n\r\nNavBar.defaultProps = {\r\n    title: 'WeedGotcha',\r\n    icon: 'fas fa-cannabis'\r\n}\r\n\r\nexport default NavBar; \r\n","import React, { useState, useContext, useEffect } from 'react';\r\nimport StrainContext from '../context/strainsContext/strainContext'\r\nimport StrainState from '../context/strainsContext/StrainState'\r\nimport axios from 'axios'\r\n\r\nconst flavors = [\r\n    { id: 1, name: \"Sweet\"},\r\n    { id: 2, name: 'Tropical'},\r\n    { id: 3, name: 'Peach'},\r\n    { id: 4, name: 'Minty'},\r\n    { id: 5, name: 'Fruit'},\r\n    { id: 6, name: 'Coffee'},\r\n    { id: 7, name: \"Chemical\"},\r\n    { id: 8, name: 'Blueberry'},\r\n    { id: 9, name: \"Pear\"},\r\n    { id: 10, name: \"Apple\"},\r\n    { id: 11, name: \"Woody\"},\r\n    { id: 12, name: \"Cheese\"},\r\n    { id: 13, name: \"Pungent\"},\r\n    { id: 14, name: \"Flowery\"},\r\n    { id: 15, name: \"Pepper\"},\r\n    { id: 16, name: \"Sage\"},\r\n    { id: 17, name: \"Chestnut\"},\r\n    { id: 18, name: \"Strawberry\"},\r\n    { id: 19, name: \"Honey\"},\r\n    { id: 20, name: \"Mint\"},\r\n    { id: 21, name: \"Orange\"},\r\n    { id: 22, name: \"Tobacco\"},\r\n    { id: 23, name: \"Tea\"},\r\n    { id: 24, name: \"Lime\"},\r\n    { id: 25, name: \"Grapefruit\"},\r\n    { id: 26, name: \"Lavender\"},\r\n    { id: 27, name: \"Tar\"},\r\n    { id: 28, name: \"Skunk\"},\r\n    { id: 29, name: \"Pine\"},\r\n    { id: 30, name: \"Mango\"},\r\n    { id: 31, name: \"Tree\"},\r\n    { id: 32, name: \"Apricot\"},\r\n    { id: 33, name: \"Vanilla\"},\r\n    { id: 34, name: \"Berry\"},\r\n    { id: 35, name: \"Menthol\"},\r\n    { id: 36, name: \"Violet\"},\r\n    { id: 37, name: \"Blue\"},\r\n    { id: 38, name: \"Nutty\"},\r\n    { id: 39, name: \"Grape\"},\r\n    { id: 40, name: \"Pineapple\"},\r\n    { id: 41, name: \"Diesel\"},\r\n    { id: 42, name: \"Ammonia\"},\r\n    { id: 43, name: \"Plum\"},\r\n    { id: 44, name: \"Lemon\"},\r\n    { id: 45, name: \"Butter\"},\r\n    { id: 46, name: \"Citrus\"},\r\n    { id: 47, name: \"Rose\"},\r\n    { id: 48, name: \"Earthy\"},\r\n    { id: 49, name: \"Spicy/Herbal\"},\r\n    { id: 50, name: \"None\"},\r\n\r\n]\r\n\r\nconst effects = [\r\n    { id: 1, name: \"Giggly\"},\r\n    { id: 2, name: 'Aroused'},\r\n    { id: 3, name: 'Energetic'},\r\n    { id: 4, name: 'Sleepy'},\r\n    { id: 5, name: 'Euphoric'},\r\n    { id: 6, name: 'Uplifted'},\r\n    { id: 7, name: \"Focused\"},\r\n    { id: 8, name: 'Creative'},\r\n    { id: 9, name: \"Talkative\"},\r\n    { id: 10, name: \"Mouth\"},\r\n    { id: 11, name: \"Dry\"},\r\n    { id: 12, name: \"Tingly\"},\r\n    { id: 13, name: \"Relaxed\"},\r\n    { id: 14, name: \"Hungry\"},\r\n    { id: 15, name: \"Happy\"},\r\n    { id: 16, name: \"None\"},\r\n]\r\n\r\n\r\n\r\n\r\n\r\nexport const StrainSelectionForm = () => {\r\n    const strainContext = useContext(StrainContext)\r\n    const [strain, setStrain] = useState([])\r\n    const [flavorsEffects, setFlavorsEffects] = useState({\r\n         flavor: '',\r\n         effect: '',\r\n        \r\n    }\r\n      \r\n    );\r\n\r\n    const { current, grabflavor, grabeffect, addStrain, strains, deleteStrain } = strainContext\r\n\r\n\r\n\r\n     \r\n\r\n    \r\n\r\n    \r\n   \r\n\r\n    const { flavor,  effect} = flavorsEffects\r\n\r\n    \r\n        \r\n     const onChangeFlavorsEffects = e => {\r\n            setFlavorsEffects({\r\n                ...flavorsEffects,\r\n                [e.target.name]: e.target.value\r\n            })\r\n     }\r\n    \r\n\r\n    const onSubmitFlavorsEffects = (e,) => {\r\n        e.preventDefault();\r\n        axios\r\n        .get(`https://mc-7-be.herokuapp.com/api/strains/${effect}/${flavor}`)\r\n        .then(res => {\r\n            // setStrain(res.data)\r\n            addStrain(res.data)\r\n            setStrain(res.data)\r\n            console.log(res.data)\r\n        })\r\n        \r\n       \r\n        grabflavor(flavor)\r\n        grabeffect(effect)\r\n\r\n    }\r\n\r\n   \r\n\r\n  \r\n\r\n\r\n\r\n       let flavorList = flavors.length > 0 \r\n    && flavors.map((item,i)=> {\r\n        return(\r\n        <option key={i} value={item.name}>{item.name}</option>\r\n        )\r\n    })\r\n\r\n    let effectList = effects.length > 0 \r\n    && effects.map((item,i)=> {\r\n        return(\r\n        <option key={i} value={item.name}>{item.name}</option>\r\n        )\r\n    })\r\n\r\n    \r\n\r\n\r\n    \r\n return (\r\n         \r\n      <StrainState>     \r\n<div>   \r\n        \r\n    <form onSubmit={onSubmitFlavorsEffects} >\r\n            <label>\r\n               <h2 className=\"text-primary\">Pick 1 Flavor</h2>\r\n               <select onChange={onChangeFlavorsEffects} name='flavor'value={flavor}>\r\n                    {flavorList}\r\n               </select>\r\n            \r\n            </label>\r\n               <label>\r\n              <h2>Pick 1 Effect</h2>\r\n              <select  onChange={onChangeFlavorsEffects} name=\"effect\"value={effect}>\r\n                   {effectList}\r\n              </select>\r\n         \r\n               \r\n            \r\n               <input type=\"submit\" value=\"Submit\" className=\"btn btn-block btn-dark\"/>\r\n           </label> \r\n\r\n           </form>\r\n\r\n<div >\r\n{strains.map(array => array.map(data => {\r\n     return(\r\n        <div className=\"card bg-dark\">\r\n            <h3 className=\"text-primary text-left\">{data.id}</h3><i className=\"fas fa-cannabis text-primary\"></i>\r\n    <h4 className=\"text-primary\">StrainType:{' '}{data.straintype}</h4>\r\n    <h4 className=\"text-primary\">Flavors:{' '}{data.flavor}</h4>\r\n    <h4 className=\"text-primary\">Effects:{' '}{data.effect}</h4>\r\n    <h4 className=\"text-primary\">Rating:{' '}{data.rating}</h4>\r\n            <p>{data.description}</p>\r\n            {/* <button onClick={deleteStrain(data)}>DELETE STRAIN</button> */}\r\n        </div> )\r\n}))}\r\n    \r\n\r\n</div>\r\n      \r\n           \r\n</div>\r\n</StrainState>      \r\n    )\r\n    \r\n}\r\n\r\nexport default StrainSelectionForm;\r\n","import React from 'react';\r\n\r\nimport StrainSelectionForm from './StrainSelectionForm';\r\nimport StrainState from '../context/strainsContext/StrainState'\r\n\r\nexport const Strains = () => {\r\n    return (\r\n        <StrainState>\r\n        <div>\r\n            <div>\r\n                <StrainSelectionForm/>\r\n            </div>\r\n\r\n           \r\n            \r\n        </div>\r\n        </StrainState>\r\n    )\r\n}\r\n\r\nexport default Strains\r\n","import React, { useState, Fragment, useEffect } from 'react';\r\n\r\n\r\nimport axios from 'axios';\r\n\r\nexport const Login = props => {\r\n\r\n    const [credentials, setCredentials ] = useState({\r\n        id:'',\r\n        password: '',\r\n        email: ''\r\n       \r\n    });\r\n\r\n    const { password, email } = credentials;\r\n\r\n    const url = 'https://mc-7-be.herokuapp.com'\r\n\r\n    const onChange = e => {\r\n        \r\n        setCredentials({\r\n            ...credentials,\r\n        [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n        axios\r\n        .post(`${url}/api/auth/login`, credentials)\r\n       .then(res => {\r\n           window.localStorage.setItem('token', res.payload)\r\n           props.history.push('/protectedstrains')\r\n       })\r\n       .catch(err => console.log(err))\r\n    }\r\n\r\n    // useEffect(()=> {\r\n        \r\n    //     axios\r\n    //     .get(`${url}/api/user/${credentials.id}`)\r\n    //    .then(res => {\r\n    //        window.localStorage.setItem('token', res.data)\r\n    //     //    props.history.push('/protectedstrains')\r\n    //     setCredentials(res.data)\r\n    //     console.log(res.data)\r\n    //    })\r\n    //    .catch(err => console.log(err))\r\n\r\n    // },[credentials])\r\n       \r\n    \r\n    \r\n    return (\r\n        <div className=\"form-container\">\r\n       <form onSubmit={onSubmit}>\r\n           <h2>Login</h2>\r\n           <input\r\n           name=\"email\"\r\n           type=\"email\"\r\n           placeholder=\"email\"\r\n           value={email}\r\n           onChange={onChange}\r\n           />\r\n           \r\n            <input\r\n            name=\"password\"\r\n           type=\"password\"\r\n           placeholder=\"password\"\r\n           value={password}\r\n           onChange={onChange}\r\n           />\r\n          \r\n\r\n        <div>\r\n               <input\r\n               type=\"submit\"\r\n               value=\"Login\"\r\n               className=\"btn btn-block bg-dark\"\r\n               />\r\n           </div>\r\n           {/* <h5>Role</h5>\r\n           <input\r\n           type=\"radio\"\r\n           name=\"role\"\r\n           value=\"patient\"\r\n           checked={role === 'patient'}\r\n           onChange={onChange}/>\r\n           Patient{' '}\r\n           <input\r\n           type=\"radio\"\r\n           name=\"role\"\r\n           value=\"provider\"\r\n           checked={role === 'provider'}\r\n           onChange={onChange}/>\r\n           Provider{' '}\r\n           <div>\r\n               <input\r\n               type=\"submit\"\r\n               value=\"Sign-up\"\r\n               className=\"btn btn-block bg-dark\"\r\n               />\r\n           </div> */}\r\n       </form>\r\n\r\n       \r\n\r\n       </div>\r\n      \r\n\r\n    )\r\n}\r\n\r\nexport default Login;\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport Login from './Login';\r\nimport Strains from './strains/Strains';\r\n\r\n\r\nexport const PrivateRoute = ({ component: Component, ...rest}) => {\r\n    return (\r\n       <Route\r\n       {...rest}\r\n       render = {props => {\r\n           if (localStorage.getItem('token')){\r\n               return <Component {...props}/>\r\n           }else {\r\n               return <Redirect to=\"/\"/>\r\n           }\r\n       }}\r\n       />\r\n    )\r\n}\r\n\r\nexport default PrivateRoute;\r\n","import React, { useState } from 'react';\r\nimport axiosWithAuth from './axiosWithAuth';\r\nimport axios from 'axios';\r\n\r\n\r\nexport const SignUp = props => {\r\n    const [credentials, setCredentials ] = useState({\r\n        \r\n        email: '',\r\n        password: '',\r\n        username: '',\r\n        role: 'Patient'\r\n        \r\n    });\r\n\r\n    const url = 'https://mc-7-be.herokuapp.com'\r\n\r\n    const { email, password, username } = credentials;\r\n\r\n    const onChange = e => {\r\n        \r\n        setCredentials({\r\n            ...credentials,\r\n        [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    const signUpSubmit = (e) => {\r\n        e.preventDefault();\r\n       axios\r\n       .post(`${url}/api/auth/register`, credentials)\r\n       .then(res => {\r\n           localStorage.setItem('token', res.data)\r\n           props.history.push('/protected')\r\n       })\r\n       .catch(err => console.log(err))\r\n    }\r\n    \r\n    return (\r\n        <div className=\"form-container\">\r\n       <form onSubmit={signUpSubmit}>\r\n           <h2 className=\"text-primary\">Sign-Up</h2>\r\n           \r\n           <input\r\n           name=\"email\"\r\n           type=\"email\"\r\n           placeholder=\"email\"\r\n           value={email}\r\n           onChange={onChange}\r\n           />\r\n             <input\r\n            name=\"username\"\r\n           type=\"text\"\r\n           placeholder=\"username\"\r\n           value={username}\r\n           onChange={onChange}\r\n           />\r\n            <input\r\n            name=\"password\"\r\n           type=\"password\"\r\n           placeholder=\"password\"\r\n           value={password}\r\n           onChange={onChange}\r\n           />\r\n          \r\n           {/* <h5>Role</h5>\r\n           <input\r\n           type=\"radio\"\r\n           name=\"role\"\r\n           value=\"patient\"\r\n           checked={credentials.role === 'patient'}\r\n           onChange={onChange}/>\r\n           Patient{' '}\r\n           <input\r\n           type=\"radio\"\r\n           name=\"role\"\r\n           value=\"provider\"\r\n           checked={credentials.role === 'provider'}\r\n           onChange={onChange}/>\r\n           Provider{' '} */}\r\n           \r\n           <div>\r\n               <input\r\n               type=\"submit\"\r\n               value=\"Sign-up\"\r\n               className=\"btn btn-block bg-dark\"\r\n               />\r\n           </div>\r\n\r\n       </form>\r\n       </div>\r\n    )\r\n}\r\n\r\nexport default SignUp;\r\n","import React, { Fragment } from 'react';\r\nimport { BrowserRouter as Router, Route, Switch} from 'react-router-dom'\r\nimport './App.css';\r\nimport StrainState from './components/context/strainsContext/StrainState'\r\nimport Navbar, { NavBar } from './components/NavBar'\r\nimport Strains from './components/strains/Strains'\r\nimport PrivateRoute from './components/PrivateRoute'\r\nimport Login from './components/Login';\r\nimport SignUp from './components/SignUp';\r\n\r\n\r\n\r\nconst App =() =>{\r\n  return (\r\n    <StrainState>\r\n    <Router>\r\n    <div className=\"App\">\r\n      \r\n    \r\n      \r\n        <NavBar/>\r\n        <div className=\"container\">\r\n        \r\n        <Switch>\r\n        <Route  path='/Front-End' component={SignUp}/>\r\n        <PrivateRoute  path=\"/protected\" component={Login}/>\r\n        {/* <Route exact path='/user' component={User}/> */}\r\n       <PrivateRoute  path=\"/protectedstrains\" component={Strains}/>\r\n        \r\n      </Switch>\r\n        </div>\r\n      \r\n   \r\n    \r\n    </div>\r\n    </Router>\r\n    </StrainState>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}